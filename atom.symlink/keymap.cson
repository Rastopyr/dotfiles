# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on OS X and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * https://atom.io/docs/latest/hacking-atom-debugging#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
'atom-workspace atom-text-editor:not([mini])':
  'shift-alt-down': 'editor:add-selection-below'
  'shift-alt-up': 'editor:add-selection-above'
  'shift-cmd-k': 'editor:delete-line'

# 'atom-text-editor':
#   'shift-v': 'hey-pane:toggle-focus-of-active-pane'

'.platform-darwin atom-workspace atom-text-editor:not([mini]), .platform-darwin atom-workspace':
  'cmd-shift-x':'expose:toggle'

'.expose-view':
  '1': 'expose:activate-1'
  '2': 'expose:activate-2'
  '3': 'expose:activate-3'
  '4': 'expose:activate-4'
  '5': 'expose:activate-5'
  '6': 'expose:activate-6'
  '7': 'expose:activate-7'
  '8': 'expose:activate-8'
  '9': 'expose:activate-9'
  'tab': 'core:move-right'
  'shift-tab': 'core:move-left'
